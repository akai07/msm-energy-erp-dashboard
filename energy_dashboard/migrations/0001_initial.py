# Generated by Django 5.2.5 on 2025-08-16 00:41

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EnergyAlert',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('alert_type', models.CharField(choices=[('high_consumption', 'High Energy Consumption'), ('low_power_factor', 'Low Power Factor'), ('peak_demand', 'Peak Demand Alert'), ('carbon_threshold', 'Carbon Emission Threshold'), ('efficiency_drop', 'Efficiency Drop')], max_length=50)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=20)),
                ('threshold_value', models.FloatField()),
                ('actual_value', models.FloatField()),
                ('message', models.TextField()),
                ('is_resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_alerts', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EnergyReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('report_type', models.CharField(choices=[('daily', 'Daily Report'), ('weekly', 'Weekly Report'), ('monthly', 'Monthly Report'), ('quarterly', 'Quarterly Report'), ('annual', 'Annual Report'), ('custom', 'Custom Period Report')], max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('title', models.CharField(max_length=200)),
                ('summary', models.TextField()),
                ('total_energy_kwh', models.FloatField()),
                ('total_co2_emissions', models.FloatField()),
                ('total_cost', models.DecimalField(decimal_places=2, max_digits=12)),
                ('average_efficiency_score', models.FloatField()),
                ('report_data', models.JSONField(default=dict)),
                ('file_path', models.FileField(blank=True, null=True, upload_to='energy_reports/')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EnergyTarget',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('target_type', models.CharField(choices=[('daily_consumption', 'Daily Energy Consumption'), ('monthly_consumption', 'Monthly Energy Consumption'), ('carbon_emissions', 'Carbon Emissions'), ('power_factor', 'Power Factor'), ('efficiency_score', 'Efficiency Score'), ('cost_reduction', 'Cost Reduction')], max_length=50)),
                ('target_value', models.FloatField()),
                ('current_value', models.FloatField(default=0)),
                ('target_date', models.DateField()),
                ('description', models.TextField()),
                ('is_achieved', models.BooleanField(default=False)),
                ('achievement_date', models.DateField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['target_date'],
            },
        ),
        migrations.CreateModel(
            name='EnergyEfficiencyMetric',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('date', models.DateField(db_index=True)),
                ('total_energy_kwh', models.FloatField()),
                ('total_co2_emissions', models.FloatField()),
                ('average_power_factor', models.FloatField()),
                ('peak_demand_kw', models.FloatField()),
                ('off_peak_consumption_kwh', models.FloatField()),
                ('peak_consumption_kwh', models.FloatField()),
                ('efficiency_score', models.FloatField(help_text='Calculated efficiency score (0-100)')),
                ('cost_per_kwh', models.DecimalField(decimal_places=4, default=0, max_digits=10)),
                ('total_cost', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('date',)},
            },
        ),
        migrations.CreateModel(
            name='EnergyReading',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('timestamp', models.DateTimeField(db_index=True)),
                ('usage_kwh', models.FloatField(help_text='Energy consumption in kWh')),
                ('lagging_current_reactive_power_kvarh', models.FloatField()),
                ('leading_current_reactive_power_kvarh', models.FloatField()),
                ('co2_emissions_tco2', models.FloatField(help_text='CO2 emissions in tCO2')),
                ('lagging_current_power_factor', models.FloatField()),
                ('leading_current_power_factor', models.FloatField()),
                ('nsm', models.FloatField(help_text='Number of Seconds from Midnight')),
                ('day_of_week', models.CharField(max_length=20)),
                ('load_type', models.CharField(blank=True, max_length=50, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['timestamp'], name='energy_dash_timesta_4ce77a_idx'), models.Index(fields=['day_of_week'], name='energy_dash_day_of__938bc5_idx'), models.Index(fields=['load_type'], name='energy_dash_load_ty_66139b_idx')],
            },
        ),
    ]
