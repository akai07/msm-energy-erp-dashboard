# Generated by Django 5.2.5 on 2025-08-16 00:41

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('inventory', '0001_initial'),
        ('production', '0001_initial'),
        ('sales', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerComplaint',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('complaint_number', models.CharField(max_length=20, unique=True)),
                ('complaint_type', models.CharField(choices=[('quality', 'Quality Issue'), ('delivery', 'Delivery Issue'), ('packaging', 'Packaging Issue'), ('documentation', 'Documentation Issue'), ('service', 'Service Issue'), ('other', 'Other')], max_length=20)),
                ('complaint_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('description', models.TextField()),
                ('batch_number', models.CharField(blank=True, max_length=50)),
                ('quantity_affected', models.FloatField(blank=True, null=True)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20)),
                ('investigation_findings', models.TextField(blank=True)),
                ('root_cause', models.TextField(blank=True)),
                ('corrective_action', models.TextField(blank=True)),
                ('customer_response', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('received', 'Received'), ('investigating', 'Under Investigation'), ('resolved', 'Resolved'), ('closed', 'Closed')], default='received', max_length=20)),
                ('resolution_date', models.DateTimeField(blank=True, null=True)),
                ('cost_impact', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('assigned_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales.customer')),
                ('material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.material')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-complaint_date'],
            },
        ),
        migrations.CreateModel(
            name='NonConformance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('ncr_number', models.CharField(max_length=20, unique=True)),
                ('reported_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('severity', models.CharField(choices=[('minor', 'Minor'), ('major', 'Major'), ('critical', 'Critical')], max_length=20)),
                ('description', models.TextField()),
                ('quantity_affected', models.FloatField()),
                ('root_cause', models.TextField(blank=True)),
                ('corrective_action', models.TextField(blank=True)),
                ('preventive_action', models.TextField(blank=True)),
                ('target_closure_date', models.DateField(blank=True, null=True)),
                ('actual_closure_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('open', 'Open'), ('investigating', 'Under Investigation'), ('corrective_action', 'Corrective Action in Progress'), ('verification', 'Under Verification'), ('closed', 'Closed')], default='open', max_length=20)),
                ('cost_impact', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('customer_impact', models.BooleanField(default=False)),
                ('assigned_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_ncrs', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.material')),
                ('reported_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reported_ncrs', to=settings.AUTH_USER_MODEL)),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.supplier')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('work_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='production.workorder')),
            ],
            options={
                'verbose_name': 'Non-Conformance Report',
                'verbose_name_plural': 'Non-Conformance Reports',
                'ordering': ['-reported_date'],
            },
        ),
        migrations.CreateModel(
            name='QualityAlert',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('alert_id', models.CharField(max_length=20, unique=True)),
                ('alert_type', models.CharField(choices=[('inspection_due', 'Inspection Due'), ('ncr_overdue', 'NCR Overdue'), ('quality_trend', 'Quality Trend Alert'), ('supplier_quality', 'Supplier Quality Issue'), ('customer_complaint', 'Customer Complaint')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=20)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('is_acknowledged', models.BooleanField(default=False)),
                ('acknowledged_date', models.DateTimeField(blank=True, null=True)),
                ('is_resolved', models.BooleanField(default=False)),
                ('resolution_notes', models.TextField(blank=True)),
                ('acknowledged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acknowledged_alerts', to=settings.AUTH_USER_MODEL)),
                ('assigned_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('related_material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.material')),
                ('related_ncr', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='quality_assurance.nonconformance')),
                ('related_supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.supplier')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='QualityCertificate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('certificate_number', models.CharField(max_length=30, unique=True)),
                ('certificate_type', models.CharField(choices=[('material_test', 'Material Test Certificate'), ('calibration', 'Calibration Certificate'), ('compliance', 'Compliance Certificate'), ('iso_certificate', 'ISO Certificate'), ('customer_specific', 'Customer Specific Certificate')], max_length=20)),
                ('batch_number', models.CharField(max_length=50)),
                ('issue_date', models.DateField(default=django.utils.timezone.now)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('test_results', models.TextField(help_text='JSON data of test results')),
                ('specifications_met', models.TextField()),
                ('remarks', models.TextField(blank=True)),
                ('digital_signature', models.CharField(blank=True, max_length=500)),
                ('is_valid', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sales.customer')),
                ('issued_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.material')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-issue_date'],
            },
        ),
        migrations.CreateModel(
            name='QualityInspection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('inspection_number', models.CharField(max_length=20, unique=True)),
                ('batch_number', models.CharField(blank=True, max_length=50)),
                ('lot_number', models.CharField(blank=True, max_length=50)),
                ('inspection_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('quantity_inspected', models.FloatField()),
                ('quantity_accepted', models.FloatField(default=0)),
                ('quantity_rejected', models.FloatField(default=0)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('on_hold', 'On Hold'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20)),
                ('overall_result', models.CharField(choices=[('pass', 'Pass'), ('fail', 'Fail'), ('conditional', 'Conditional Pass'), ('pending', 'Pending')], default='pending', max_length=20)),
                ('remarks', models.TextField(blank=True)),
                ('corrective_action_required', models.BooleanField(default=False)),
                ('corrective_action', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('inspector', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.material')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.supplier')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('work_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='production.workorder')),
            ],
            options={
                'ordering': ['-inspection_date'],
            },
        ),
        migrations.AddField(
            model_name='nonconformance',
            name='inspection',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='quality_assurance.qualityinspection'),
        ),
        migrations.CreateModel(
            name='QualityInspectionPlan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('plan_id', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('inspection_type', models.CharField(choices=[('incoming', 'Incoming Material Inspection'), ('in_process', 'In-Process Inspection'), ('final', 'Final Product Inspection'), ('pre_dispatch', 'Pre-Dispatch Inspection')], max_length=20)),
                ('sampling_percentage', models.FloatField(default=10.0)),
                ('inspection_frequency', models.CharField(help_text='e.g., Every batch, Daily, Weekly', max_length=50)),
                ('inspector_required', models.CharField(max_length=100)),
                ('estimated_time_minutes', models.IntegerField(default=60)),
                ('is_mandatory', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.material')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['plan_id'],
            },
        ),
        migrations.AddField(
            model_name='qualityinspection',
            name='inspection_plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quality_assurance.qualityinspectionplan'),
        ),
        migrations.CreateModel(
            name='QualityStandard',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('standard_id', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('standard_type', models.CharField(choices=[('iso', 'ISO Standard'), ('astm', 'ASTM Standard'), ('din', 'DIN Standard'), ('bis', 'BIS Standard'), ('internal', 'Internal Standard'), ('customer', 'Customer Specification')], max_length=20)),
                ('version', models.CharField(max_length=20)),
                ('description', models.TextField()),
                ('test_parameters', models.TextField(help_text='JSON data of test parameters and limits')),
                ('sampling_plan', models.TextField(blank=True)),
                ('acceptance_criteria', models.TextField()),
                ('effective_date', models.DateField()),
                ('review_date', models.DateField(blank=True, null=True)),
                ('applicable_materials', models.ManyToManyField(blank=True, to='inventory.material')),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['standard_id'],
            },
        ),
        migrations.AddField(
            model_name='qualityinspectionplan',
            name='quality_standard',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quality_assurance.qualitystandard'),
        ),
        migrations.CreateModel(
            name='TestMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('method_id', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('category', models.CharField(choices=[('chemical', 'Chemical Analysis'), ('mechanical', 'Mechanical Testing'), ('physical', 'Physical Testing'), ('dimensional', 'Dimensional Inspection'), ('visual', 'Visual Inspection'), ('ndt', 'Non-Destructive Testing')], max_length=20)),
                ('description', models.TextField()),
                ('procedure', models.TextField()),
                ('equipment_required', models.TextField()),
                ('sample_size', models.CharField(max_length=100)),
                ('test_duration_minutes', models.IntegerField(default=30)),
                ('accuracy_level', models.CharField(max_length=50)),
                ('cost_per_test', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('applicable_standards', models.ManyToManyField(blank=True, to='quality_assurance.qualitystandard')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['method_id'],
            },
        ),
        migrations.CreateModel(
            name='QualityTestResult',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('test_parameter', models.CharField(max_length=100)),
                ('specification_min', models.CharField(blank=True, max_length=50)),
                ('specification_max', models.CharField(blank=True, max_length=50)),
                ('actual_value', models.CharField(max_length=50)),
                ('unit_of_measure', models.CharField(max_length=20)),
                ('result', models.CharField(choices=[('pass', 'Pass'), ('fail', 'Fail'), ('conditional', 'Conditional'), ('not_tested', 'Not Tested')], max_length=20)),
                ('test_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('equipment_used', models.CharField(blank=True, max_length=100)),
                ('remarks', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('inspection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quality_assurance.qualityinspection')),
                ('tested_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('test_method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quality_assurance.testmethod')),
            ],
            options={
                'ordering': ['test_method__name'],
            },
        ),
        migrations.AddField(
            model_name='qualityinspectionplan',
            name='test_methods',
            field=models.ManyToManyField(to='quality_assurance.testmethod'),
        ),
        migrations.CreateModel(
            name='QualityMetrics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('metric_type', models.CharField(choices=[('defect_rate', 'Defect Rate'), ('first_pass_yield', 'First Pass Yield'), ('customer_satisfaction', 'Customer Satisfaction'), ('supplier_quality', 'Supplier Quality Rating'), ('cost_of_quality', 'Cost of Quality'), ('inspection_efficiency', 'Inspection Efficiency')], max_length=30)),
                ('period_type', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly')], max_length=20)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('target_value', models.FloatField()),
                ('actual_value', models.FloatField()),
                ('unit_of_measure', models.CharField(max_length=20)),
                ('variance', models.FloatField(default=0)),
                ('variance_percentage', models.FloatField(default=0)),
                ('trend', models.CharField(blank=True, choices=[('improving', 'Improving'), ('stable', 'Stable'), ('declining', 'Declining')], max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.material')),
                ('production_line', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='production.productionline')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.supplier')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-period_end'],
                'unique_together': {('metric_type', 'period_start', 'period_end', 'material', 'supplier')},
            },
        ),
    ]
